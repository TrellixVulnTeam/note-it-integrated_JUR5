{"ast":null,"code":"import _asyncToGenerator from \"/home/nehakothari/Desktop/Engage/Neha/Note-It/src/main/webapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/rest-api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../navbar/navbar.component\";\nexport class UploadNotesComponent {\n  constructor(_api, router) {\n    this._api = _api;\n    this.router = router;\n  }\n\n  ngOnInit() {\n    $('form').jsonForm({\n      schema: {\n        Chapters: {\n          type: \"array\",\n          items: {\n            type: \"object\",\n            title: \"-----------------------------------------\",\n            properties: {\n              \"chapterNumber\": {\n                \"type\": \"integer\",\n                \"title\": \"Chapter Number\",\n                \"required\": true\n              },\n              \"chapterName\": {\n                \"type\": \"string\",\n                \"title\": \"Chapter Name\",\n                \"required\": true\n              },\n              \"startPage\": {\n                \"type\": \"integer\",\n                \"title\": \"Start Page\",\n                \"required\": true\n              },\n              \"endPage\": {\n                \"type\": \"integer\",\n                \"title\": \"End Page\",\n                \"required\": true\n              },\n              \"description\": {\n                \"type\": \"string\",\n                \"title\": \"Description\",\n                \"required\": true\n              }\n            }\n          }\n        }\n      },\n      onSubmit: function (errors, values) {\n        if (errors) {\n          console.log(errors);\n        } else {\n          localStorage.setItem(\"note_chapters\", JSON.stringify(values.chapters));\n          Swal.fire('Chapters Submitted!', 'Click on Save Changes!', 'success');\n        }\n      }\n    });\n  }\n\n  upload() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.note_chapters = localStorage.note_chapters;\n      _this.note_chapters = JSON.parse(_this.note_chapters);\n      let json = {}; // Get title\n\n      let title = document.getElementById(\"title\");\n      json.bookName = title.value; // get description\n\n      let description = document.getElementById(\"description\");\n      json.description = description.value; // author\n\n      let author = document.getElementById(\"author\");\n      json.author = author.value; // file\n\n      let formData = new FormData();\n      console.log(\"JSON\", json);\n      formData.set(\"json\", JSON.stringify(json));\n      let file = document.getElementById(\"file\");\n      let file2 = file.files[0];\n      console.log(\"BEFOREEE\", file2);\n\n      if (file2 !== undefined) {\n        console.log(\"BEFOREEE appended\");\n        formData.append(\"file\", file2);\n      } // push to backend\n\n\n      console.log(\"form data\", formData);\n      let response = yield _this._api.push_final(formData);\n      console.log(\"RESPONSEEEEEE\", response); // if chapters are present\n      // Sending the chapters:\n\n      if (_this.note_chapters) {\n        console.log(\"now going to chapters\");\n        let obj = JSON.parse(JSON.stringify(json));\n        obj.bookId = response.bookId;\n        obj.uploadedByUser = \"user\";\n        obj.chapters = _this.note_chapters; // obj.author = author.value\n\n        console.log(\"Split obj\", obj);\n\n        let response1 = _this._api.push_chapters_to_backend(obj);\n\n        if (response1) {\n          Swal.fire('Yayy!', 'Notes Submitted!', 'success');\n        } // route to dashboard.\n\n\n        _this.router.navigate(['home']);\n      }\n    })();\n  }\n\n}\n\nUploadNotesComponent.ɵfac = function UploadNotesComponent_Factory(t) {\n  return new (t || UploadNotesComponent)(i0.ɵɵdirectiveInject(i1.RestApiService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nUploadNotesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UploadNotesComponent,\n  selectors: [[\"app-upload-notes\"]],\n  decls: 39,\n  vars: 0,\n  consts: [[1, \"container\", 2, \"max-width\", \"70vw\"], [1, \"row\", \"text-center\", \"mt-4\"], [1, \"row\", \"source-sans-pro\"], [1, \"input-group\", \"mb-3\"], [1, \"input-group-text\"], [\"type\", \"text\", \"id\", \"title\", \"aria-describedby\", \"title\", 1, \"form-control\"], [\"type\", \"text\", \"aria-describedby\", \"description\", \"id\", \"description\", 1, \"form-control\"], [\"type\", \"text\", \"aria-describedby\", \"author\", \"id\", \"author\", 1, \"form-control\"], [\"type\", \"file\", \"id\", \"file\", 1, \"form-control\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-danger\"], [1, \"btn\", \"btn-primary\", \"mx-3\", 3, \"click\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-primary\"]],\n  template: function UploadNotesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-navbar\");\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelementStart(3, \"h2\");\n      i0.ɵɵtext(4, \"Upload Notes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 2);\n      i0.ɵɵelementStart(6, \"div\", 3);\n      i0.ɵɵelementStart(7, \"span\", 4);\n      i0.ɵɵtext(8, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 3);\n      i0.ɵɵelementStart(11, \"span\", 4);\n      i0.ɵɵtext(12, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 3);\n      i0.ɵɵelementStart(15, \"span\", 4);\n      i0.ɵɵtext(16, \"Author\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 3);\n      i0.ɵɵelement(19, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 9);\n      i0.ɵɵtext(21, \"Split Notes?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function UploadNotesComponent_Template_button_click_22_listener() {\n        return ctx.upload();\n      });\n      i0.ɵɵtext(23, \"Add Notes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 11);\n      i0.ɵɵelementStart(25, \"div\", 12);\n      i0.ɵɵelementStart(26, \"div\", 13);\n      i0.ɵɵelementStart(27, \"div\", 14);\n      i0.ɵɵelementStart(28, \"h5\", 15);\n      i0.ɵɵtext(29, \"Split Notes into Chapters\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"button\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 17);\n      i0.ɵɵelement(32, \"form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 18);\n      i0.ɵɵelementStart(34, \"button\", 19);\n      i0.ɵɵtext(35, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"button\", 20);\n      i0.ɵɵtext(37, \"Save changes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"form\");\n    }\n  },\n  directives: [i3.NavbarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGxvYWQtbm90ZXMuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"sources":["/home/nehakothari/Desktop/Engage/Neha/Note-It/src/main/webapp/src/app/components/upload-notes/upload-notes.component.ts","/home/nehakothari/Desktop/Engage/Neha/Note-It/src/main/webapp/src/app/components/upload-notes/upload-notes.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport Swal from 'sweetalert2';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-upload-notes',\n  templateUrl: './upload-notes.component.html',\n  styleUrls: ['./upload-notes.component.scss']\n})\nexport class UploadNotesComponent implements OnInit {\n\n  constructor(private _api:RestApiService, public router: Router) { }\n  note_chapters:any;\n\n  ngOnInit(): void {\n    $('form').jsonForm({\n      schema: {\n        Chapters: {\n          type: \"array\",\n          items: {\n            type: \"object\",\n            title: \"-----------------------------------------\",\n            properties: {\n              \"chapterNumber\": {\n                \"type\": \"integer\",\n                \"title\": \"Chapter Number\",\n                \"required\": true\n              },\n              \"chapterName\": {\n                \"type\": \"string\",\n                \"title\": \"Chapter Name\",\n                \"required\": true\n              },\n              \"startPage\": {\n                \"type\": \"integer\",\n                \"title\": \"Start Page\",\n                \"required\": true\n              },\n              \"endPage\": {\n                \"type\": \"integer\",\n                \"title\": \"End Page\",\n                \"required\": true\n              },\n              \"description\": {\n                \"type\": \"string\",\n                \"title\": \"Description\",\n                \"required\": true\n              },\n            }\n          }\n        }\n      },\n      onSubmit: function (errors:any, values: any){\n\n        if (errors) {\n          console.log(errors);\n          \n        }\n        else {\n          localStorage.setItem(\"note_chapters\", JSON.stringify(values.chapters));\n\n          Swal.fire(\n            'Chapters Submitted!',\n            'Click on Save Changes!',\n            'success'\n          )\n        }\n      }\n    });\n  }\n\n  async upload(){\n    this.note_chapters = localStorage.note_chapters\n    this.note_chapters = JSON.parse(this.note_chapters);\n\n    let json: any = {}\n\n    // Get title\n    let title:any = document.getElementById(\"title\");\n    json.bookName = title.value\n\n    // get description\n    let description:any = document.getElementById(\"description\");\n    json.description = description.value\n\n    // author\n    let author:any = document.getElementById(\"author\")\n    json.author = author.value\n\n    // file\n    let formData = new FormData();\n    console.log(\"JSON\", json);\n    \n    formData.set(\"json\", JSON.stringify(json));\n    let file:any = document.getElementById(\"file\")\n    let file2 = file.files[0];\n    console.log(\"BEFOREEE\", file2);\n\n    if (file2 !== undefined) {\n      console.log(\"BEFOREEE appended\");\n      formData.append(\"file\", file2);\n    }\n\n    // push to backend\n    console.log(\"form data\", formData);\n    \n    let response:any = await this._api.push_final(formData);\n    console.log(\"RESPONSEEEEEE\", response);\n\n    // if chapters are present\n        // Sending the chapters:\n        if(this.note_chapters){\n          console.log(\"now going to chapters\");\n          \n          let obj = JSON.parse(JSON.stringify(json));\n          obj.bookId = response.bookId;\n          obj.uploadedByUser = \"user\"\n          obj.chapters = this.note_chapters;\n          // obj.author = author.value\n          console.log(\"Split obj\", obj);\n          let response1:any = this._api.push_chapters_to_backend(obj);\n          if(response1){\n            Swal.fire(\n              'Yayy!',\n              'Notes Submitted!',\n              'success'\n            )\n          }\n          // route to dashboard.\n        this.router.navigate(['home']);\n          \n        }\n  }\n\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container\" style=\"max-width: 70vw;\">\n    <div class=\"row text-center mt-4\">\n        <h2>Upload Notes</h2>\n    </div>\n\n    <div class=\"row source-sans-pro\">\n\n          <div class=\"input-group mb-3\">\n            <span class=\"input-group-text\">Title</span>\n            <input type=\"text\" class=\"form-control\" id=\"title\" aria-describedby=\"title\">\n          </div>\n\n          <div class=\"input-group mb-3\">\n            <span class=\"input-group-text\" >Description</span>\n            <input type=\"text\" class=\"form-control\" aria-describedby=\"description\" id=\"description\">\n          </div>\n\n          <div class=\"input-group mb-3\">\n            <span class=\"input-group-text\" >Author</span>\n            <input type=\"text\" class=\"form-control\" aria-describedby=\"author\" id=\"author\">\n          </div>\n\n          <!-- Upload -->\n          <div class=\"input-group mb-3\">\n            <input type=\"file\" class=\"form-control\" id=\"file\">\n          </div>\n    </div>\n\n    <button class=\"btn btn-danger\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Split Notes?</button>\n    <button class=\"btn btn-primary mx-3\" (click)=\"upload()\">Add Notes</button>\n\n</div>\n\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Split Notes into Chapters</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n            <form></form>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n          <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">Save changes</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <form></form>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}